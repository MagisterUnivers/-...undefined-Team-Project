{"mappings":"oeA+CO,MAAMA,EAAkB,EAC7BC,OAAAC,EAAMC,mBACNA,EACAC,MAAAC,EAAKC,SACLA,MAEA,MAAMC,EAAoC,iBAAXL,EACzBM,GAAmBD,GAAmBL,aAAkBO,YAExDC,EAAWH,EACb,IAAII,SAASC,iBAAiBV,IAC9B,IAAKM,EAAkB,CAACN,GAAUA,GAEhCW,EAAWT,IACf,IAAKD,EAEH,YADAG,EAASF,GAIIA,EAAMH,OACIa,QAAQX,IAIjCG,EAASF,EAAM,EAOjB,OAJAM,EAASK,SAAQC,IACfA,EAAQC,iBAAiBZ,EAAOQ,EAAQ,IAGnC,KACLH,EAASK,SAAQC,IACfA,EAAQE,oBAAoBb,EAAOQ,EAAQ,GAC3C,CACH,EChFF,MAEC,MAAMM,EAAQ,QAQRC,EAAqBC,IACzBV,SAASW,KAAKC,aAAa,aAAcF,GAEzCG,aAAaC,QAAQN,EAAOE,GAI5BK,EAF0B,SAAVL,EAEO,EAGnBK,EAAkBC,IAEPhB,SAASC,iBACtB,gCAGKG,SAAQa,IACbA,EAAMD,QAAUA,CAAO,GACvB,EAxBiB,MACnB,MAAME,EAAgBL,aAAaM,QAAQX,IAAU,QAErDC,EAAkBS,EAAa,EAgCjCE,GAEA/B,EAAgB,CACdC,OAAQ,OACRE,mBACE,8EACFC,MAAO,QACPE,SAfkB,KAClB,MAAMgB,KAAEA,GAASX,SACXkB,EAAeP,EAAKU,aAAa,cAGvCZ,EAFyC,SAAjBS,EAA0B,QAAU,OAEjC,GAY9B,EAhDA,G,4BC0BD,SAASI,IACP,OAAOC,KAAKC,MAAMX,aAAaM,QAAQ,gB,CAzBzCM,OAAOC,OA4BP,WACE,MAAMC,EAAeL,IACrB,GAA4B,IAAxBK,EAAaC,OAKf,OAJA5B,SACG6B,cAAc,gCACdC,gBAAgB,eACnB9B,SAAS6B,cAAc,yBAAyBE,MAAMC,QAAU,SAGhEhC,SAAS6B,cAAc,yBAAyBE,MAAMC,QAAU,OAGlE,MAAMC,GAQgBC,EARqBP,EASvBO,EAAUC,KAAIC,IAEhC,OADAC,QAAQC,IAAIF,GAOGG,EANEH,EAOfvB,aAAaM,QAAQ,gBAAgBqB,SAAS,GAAGD,EAAQE,WACpD,yCAAyCF,EAAQE,yDACfF,EAAQG,uBAAuBH,EAAQI,6HAA6HJ,EAAQK,kDAAkDC,EAAAC,iBAAiBD,EAAAE,oCAEjR,yCAAyCR,EAAQE,yDACfF,EAAQG,uBAAuBH,EAAQI,6HAA6HJ,EAAQK,kDAAkDC,EAAAC,iBAAiBD,EAAAG,iCAN5R,IAAmBT,CANW,KAH9B,IAAwBL,EANtBlC,SACG6B,cAAc,0BACdoB,mBAAmB,YAAahB,EAAoBiB,KAAK,KAC5DlD,SAASmD,eAAe,WAAWrB,gBAAgB,S,CA7CrCsB,GAKWpD,SAAS6B,cAAc,0BAE/BvB,iBAAiB,SAElC,SAA0B+C,GAEtBA,EAAG/D,OAAOgE,QAAQ,gBAAgBC,UAAUC,SAAS,qBAErDH,EAAG/D,OAAOgE,QAAQ,0BAA0BG,SACV,IAA9BnC,IAAmBM,SACrB5B,SACG6B,cAAc,gCACdC,gBAAgB,UACnB9B,SAAS6B,cAAc,yBAAyBE,MAAMC,QAAU,S","sources":["src/js/utils.ts","src/partials/components/switcher_theme_button/switcher_theme_button.ts","src/js/fav_cocktails.js"],"sourcesContent":["type EventHandlerArgs = {\n  /**\n   * query selector to find elements or element/s\n   */\n  target: string | HTMLElement | HTMLElement[] | NodeListOf<HTMLElement>;\n  /**\n   * query selector to find child elements to delegate the event\n   */\n  childQuerySelector?: string;\n  /**\n   * event key\n   */\n  event: keyof HTMLElementEventMap;\n  /**\n   * callback function\n   */\n  callback: EventListener;\n};\n\n/**\n * Add event handler to elements and allow delegation,\n * returns a function to remove the event handler\n *\n * @param target query selector to find elements or element/s\n * @param childQuerySelector query selector to find child elements to delegate the event\n * @param event event key\n * @param callback callback function\n * @returns function to remove the event handler\n *\n * @example\n * const removeHandler = addEventHandler({\n *  target: 'body',\n *  childQuerySelector: '.switcher_theme_button input',\n *  event: 'click',\n *  callback: switchTheme,\n * });\n *\n * // remove event handler\n * removeHandler();\n *\n * @example\n * const removeHandler = addEventHandler({\n *  target: document.querySelector('.switcher_theme_button input'),\n *  event: 'click',\n *  callback: switchTheme,\n * });\n */\nexport const addEventHandler = ({\n  target,\n  childQuerySelector,\n  event,\n  callback,\n}: EventHandlerArgs) => {\n  const isQuerySelector = typeof target === 'string';\n  const isSingleElement = !isQuerySelector && target instanceof HTMLElement;\n\n  const elements = isQuerySelector\n    ? [...document.querySelectorAll(target)]\n    : [...(isSingleElement ? [target] : target)];\n\n  const handler = (event: Event) => {\n    if (!childQuerySelector) {\n      callback(event);\n      return;\n    }\n\n    const target = event.target as HTMLElement;\n    const itMatches = target.matches(childQuerySelector);\n\n    if (!itMatches) return;\n\n    callback(event);\n  };\n\n  elements.forEach(element => {\n    element.addEventListener(event, handler);\n  });\n\n  return () => {\n    elements.forEach(element => {\n      element.removeEventListener(event, handler);\n    });\n  };\n};\n","import { addEventHandler } from '../../../js/utils';\n\n(() => {\n  type Theme = 'light' | 'dark';\n  const THEME = 'theme';\n\n  const restoreTheme = () => {\n    const currentTheme = (localStorage.getItem(THEME) ?? 'light') as Theme;\n\n    setThemeAttribute(currentTheme);\n  };\n\n  const setThemeAttribute = (theme: Theme) => {\n    document.body.setAttribute('data-theme', theme);\n\n    localStorage.setItem(THEME, theme);\n\n    const checked = theme === 'dark' ? true : false;\n\n    setInputsValue(checked);\n  };\n\n  const setInputsValue = (checked: boolean) => {\n    // get all inputs with switcher_theme_button inputs\n    const inputs = document.querySelectorAll<HTMLInputElement>(\n      '.switcher_theme_button input'\n    );\n\n    inputs.forEach(input => {\n      input.checked = checked;\n    });\n  };\n\n  const switchTheme = () => {\n    const { body } = document;\n    const currentTheme = body.getAttribute('data-theme');\n    const newTheme: Theme = currentTheme === 'dark' ? 'light' : 'dark';\n\n    setThemeAttribute(newTheme);\n  };\n\n  restoreTheme();\n\n  addEventHandler({\n    target: 'body',\n    childQuerySelector:\n      '.switcher_theme_button input, .switcher_theme_button .switcher_theme_toggle',\n    event: 'click',\n    callback: switchTheme,\n  });\n})();\n","import '../partials/components/switcher_theme_button/switcher_theme_button.ts';\nimport './add-remove-fav';\nimport { ADD_BTN, REMOVE_BTN, LEARN_MORE_BTN } from './constants.js';\n\nwindow.onload = renderCocktailsBySD();\n\nshowDefaultText();\n\nfunction showDefaultText() {\n  const favCocktailsList = document.querySelector('.random-cocktail__list');\n\n  favCocktailsList.addEventListener('click', onRemoveBtnClick);\n\n  function onRemoveBtnClick(ev) {\n    if (\n      ev.target.closest('.btn-primary').classList.contains('btn-remove-from')\n    ) {\n      ev.target.closest('.random-cocktail__item').remove();\n      if (getCocktailsBySD().length === 1) {\n        document\n          .querySelector('.fav-cocktails__default-text')\n          .removeAttribute('hidden');\n        document.querySelector('.fav-content__wrapper').style.display = 'block';\n      }\n    }\n  }\n}\n\nfunction getCocktailsBySD() {\n  return JSON.parse(localStorage.getItem('favCocktails'));\n}\n\nfunction renderCocktailsBySD() {\n  const cocktailsArr = getCocktailsBySD();\n  if (cocktailsArr.length === 0) {\n    document\n      .querySelector('.fav-cocktails__default-text')\n      .removeAttribute('hidden');\n    document.querySelector('.fav-content__wrapper').style.display = 'block';\n    return;\n  } else {\n    document.querySelector('.fav-content__wrapper').style.display = 'none';\n  }\n\n  const cocktailElementsArr = createElements(cocktailsArr);\n\n  document\n    .querySelector('.random-cocktail__list')\n    .insertAdjacentHTML('beforeend', cocktailElementsArr.join(''));\n  document.getElementById('content').removeAttribute('hidden');\n}\n\nfunction createElements(cocktails) {\n  const elementsArr = cocktails.map(cocktail => {\n    console.log(cocktail);\n    return createPic(cocktail);\n  });\n\n  return elementsArr;\n}\n\nfunction createPic(picture) {\n  if (localStorage.getItem('favCocktails').includes(`${picture.idDrink}`)) {\n    return `<li class=\"random-cocktail__item\" id=\"${picture.idDrink}\">\n  <img class=\"random-cocktail__image\" src=\"${picture.strDrinkThumb}\" alt=\"${picture.strCategory}\" loading=\"lazy\" width=0 heigth=0/><h3 class=\"random-cocktail__uppertext theme_text_color\" name=\"cocktailName\">${picture.strDrink}</h3><div class=\"random-cocktail__btn\">${LEARN_MORE_BTN}${REMOVE_BTN}</div></li></div></div>`;\n  } else {\n    return `<li class=\"random-cocktail__item\" id=\"${picture.idDrink}\">\n  <img class=\"random-cocktail__image\" src=\"${picture.strDrinkThumb}\" alt=\"${picture.strCategory}\" loading=\"lazy\" width=0 heigth=0/><h3 class=\"random-cocktail__uppertext theme_text_color\" name=\"cocktailName\">${picture.strDrink}</h3><div class=\"random-cocktail__btn\">${LEARN_MORE_BTN}${ADD_BTN}</div></li></div></div>`;\n  }\n}\n"],"names":["$8cee4a6e11d14af2$export$3b37be979ee3303a","target","target1","childQuerySelector","event","event1","callback","isQuerySelector","isSingleElement","HTMLElement","elements","document","querySelectorAll","handler","matches","forEach","element","addEventListener","removeEventListener","THEME","setThemeAttribute","theme","body","setAttribute","localStorage","setItem","setInputsValue","checked","input","currentTheme","getItem","restoreTheme","getAttribute","$0add6f624dcca65e$var$getCocktailsBySD","JSON","parse","window","onload","cocktailsArr","length","querySelector","removeAttribute","style","display","cocktailElementsArr","cocktails","map","cocktail","console","log","picture","includes","idDrink","strDrinkThumb","strCategory","strDrink","$8G1wF","LEARN_MORE_BTN","REMOVE_BTN","ADD_BTN","insertAdjacentHTML","join","getElementById","$0add6f624dcca65e$var$renderCocktailsBySD","ev","closest","classList","contains","remove"],"version":3,"file":"fav_cocktails.943f322f.js.map"}