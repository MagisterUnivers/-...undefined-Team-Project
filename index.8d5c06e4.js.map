{"mappings":"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","sources":["src/partials/components/switcher_theme_button/switcher_theme_button.ts","src/js/utils.ts","src/js/add-remove-fav.js","src/js/get-cocktail.js","src/js/modal-cocktail.js","src/js/modal-ingredients.js"],"sourcesContent":["import { addEventHandler } from '../../../js/utils';\n\n(() => {\n  type Theme = 'light' | 'dark';\n  const THEME = 'theme';\n\n  const restoreTheme = () => {\n    const currentTheme = (localStorage.getItem(THEME) ?? 'light') as Theme;\n\n    setThemeAttribute(currentTheme);\n  };\n\n  const setThemeAttribute = (theme: Theme) => {\n    document.body.setAttribute('data-theme', theme);\n\n    localStorage.setItem(THEME, theme);\n\n    const checked = theme === 'dark' ? true : false;\n\n    setInputsValue(checked);\n  };\n\n  const setInputsValue = (checked: boolean) => {\n    // get all inputs with switcher_theme_button inputs\n    const inputs = document.querySelectorAll<HTMLInputElement>(\n      '.switcher_theme_button input'\n    );\n\n    inputs.forEach(input => {\n      input.checked = checked;\n    });\n  };\n\n  const switchTheme = () => {\n    const { body } = document;\n    const currentTheme = body.getAttribute('data-theme');\n    const newTheme: Theme = currentTheme === 'dark' ? 'light' : 'dark';\n\n    setThemeAttribute(newTheme);\n  };\n\n  restoreTheme();\n\n  addEventHandler({\n    target: 'body',\n    childQuerySelector:\n      '.switcher_theme_button input, .switcher_theme_button .switcher_theme_toggle',\n    event: 'click',\n    callback: switchTheme,\n  });\n})();\n","type EventHandlerArgs = {\n  /**\n   * query selector to find elements or element/s\n   */\n  target: string | HTMLElement | HTMLElement[] | NodeListOf<HTMLElement>;\n  /**\n   * query selector to find child elements to delegate the event\n   */\n  childQuerySelector?: string;\n  /**\n   * event key\n   */\n  event: keyof HTMLElementEventMap;\n  /**\n   * callback function\n   */\n  callback: EventListener;\n};\n\n/**\n * Add event handler to elements and allow delegation,\n * returns a function to remove the event handler\n *\n * @param target query selector to find elements or element/s\n * @param childQuerySelector query selector to find child elements to delegate the event\n * @param event event key\n * @param callback callback function\n * @returns function to remove the event handler\n *\n * @example\n * const removeHandler = addEventHandler({\n *  target: 'body',\n *  childQuerySelector: '.switcher_theme_button input',\n *  event: 'click',\n *  callback: switchTheme,\n * });\n *\n * // remove event handler\n * removeHandler();\n *\n * @example\n * const removeHandler = addEventHandler({\n *  target: document.querySelector('.switcher_theme_button input'),\n *  event: 'click',\n *  callback: switchTheme,\n * });\n */\nexport const addEventHandler = ({\n  target,\n  childQuerySelector,\n  event,\n  callback,\n}: EventHandlerArgs) => {\n  const isQuerySelector = typeof target === 'string';\n  const isSingleElement = !isQuerySelector && target instanceof HTMLElement;\n\n  const elements = isQuerySelector\n    ? [...document.querySelectorAll(target)]\n    : [...(isSingleElement ? [target] : target)];\n\n  const handler = (event: Event) => {\n    if (!childQuerySelector) {\n      callback(event);\n      return;\n    }\n\n    const target = event.target as HTMLElement;\n    const itMatches = target.matches(childQuerySelector);\n\n    if (!itMatches) return;\n\n    callback(event);\n  };\n\n  elements.forEach(element => {\n    element.addEventListener(event, handler);\n  });\n\n  return () => {\n    elements.forEach(element => {\n      element.removeEventListener(event, handler);\n    });\n  };\n};\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\nimport { getCocktail } from './get-cocktail';\nimport { ADD_BTN, REMOVE_BTN } from './constants';\nimport { onBtnAddFavClick } from './modal-cocktail';\n\nconst cocktailsDiv = document.querySelector('#rnd-cocktail');\n// console.log(cocktailsDiv);\nlet btnsDiv;\nlet btnEl;\nlet selectedCocktail;\nlet cocktailName;\n// console.log(JSON.parse(localStorage.getItem('favCocktails')));\nif (!localStorage.getItem('favCocktails')) {\n  localStorage.setItem('favCocktails', JSON.stringify([]));\n}\ncocktailsDiv.addEventListener('click', onBtnAddRemoveFavClick);\n\nasync function onBtnAddRemoveFavClick(e) {\n  if (e.target.closest('.btn-add-to')) {\n    btnEl = e.target.closest('.btn-add-to');\n    btnsDiv = e.target.closest('.random-cocktail__btn');\n    // console.log(btnEl);\n    // console.dir(e.target.parentNode.parentNode);\n    selectedCocktail = e.target.closest('.random-cocktail__item').id;\n\n    // else {\n    //   btnEl = e.target.parentNode.parentNode;\n    //   btnsDiv = e.target.parentNode.parentNode.parentNode;\n    //   selectedCocktail =\n    //     e.target.parentNode.parentNode.parentNode.parentNode.id;\n    // }\n    btnEl.setAttribute('disabled', '');\n    const result = await getCocktail(selectedCocktail);\n    try {\n      // console.log(result);\n      const favList = JSON.parse(localStorage.getItem('favCocktails'));\n\n      favList.push(result.drinks[0]);\n      localStorage.setItem('favCocktails', JSON.stringify(favList));\n      cocktailName = favList[favList.length - 1].strDrink;\n      Notify.success(`Cocktail ${cocktailName} added to your favorites😍!`);\n      btnEl.remove();\n      btnsDiv.insertAdjacentHTML('beforeend', REMOVE_BTN);\n    } catch {\n      console.log('ERROR>>', error.message);\n      Notify.failure('Some error has occurred. Try in a few minutes.❌');\n    }\n  } else if (e.target.closest('.btn-remove-from')) {\n    btnEl = e.target.closest('.btn-remove-from');\n    btnsDiv = e.target.closest('.random-cocktail__btn');\n\n    btnEl.setAttribute('disabled', '');\n\n    // console.log('click on remove');\n    const favCocktails = JSON.parse(localStorage.getItem('favCocktails'));\n    favCocktails.splice(\n      favCocktails.findIndex(cocktail => {\n        cocktailName = cocktail.strDrink;\n        return (\n          Number(cocktail.idDrink) === Number(e.target.parentNode.parentNode.id)\n        );\n      }),\n      1\n    );\n    btnEl.remove();\n    if (btnsDiv) {\n      //\n      btnsDiv.insertAdjacentHTML('beforeend', ADD_BTN); // добавлена проверка if btnsDiv, выбивало ошибку в консоли при нажатии на кнопку remove на странице fav_ingredients\n    } //\n\n    localStorage.setItem('favCocktails', JSON.stringify(favCocktails));\n    Notify.info(`Cocktail ${cocktailName} was removed from your favorites🙄!`);\n  } else if (e.target.classList.contains('btn-learn-more')) {\n    onBtnAddFavClick(e);\n  }\n}\n","const BASE_URL = 'https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=';\n\nexport async function getCocktail(cocktailName) {\n  const response = await fetch(`${BASE_URL}${cocktailName}`);\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error();\n  }\n\n}\n/*\n  |============================\n  | Old variant\n  |============================\n*/\n// export function getCocktail(cocktailName) {\n//   return fetch(`${BASE_URL}${cocktailName}`).then(response => {\n//     if (response.ok) {\n//       return response.json();\n//     } else {\n//       throw new Error();\n//     }\n//   });\n// }\n\n","/**\n  |============================\n  | Import\n  |============================\n*/\nimport {\n  getIngredientData,\n  modalIngredients,\n} from './modal-ingredients';\nimport { id } from './add-remove-fav';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\nimport { REMOVE_BTN, ADD_BTN } from './constants';\n/**\n  |============================\n  | Refs\n  |============================\n*/\n\nconst modalInfo = document.querySelector('.modal-cocktails-group');\nconst modal = document.querySelector('#modal-cocktails');\nconst openBtn = document.querySelector('.btn-secondary');\nconst closeBtn = document.querySelector('.modal-cocktails-close');\nconst modalGroup = document.querySelector('.backdrop2');\nconst removeFavoritesButton = document.querySelector('#modal-btn__remove-fav2');\nconst addFavoritesButton = document.querySelector('#modal-btn__add-to-fav2');\nlet cocktail; // Serhii var\nlet cocktailTitle; // Serhii var\nconst cocktailsDiv = document.querySelector('#rnd-cocktail');\n\n/**\n  |============================\n  | Code\n  |============================\n*/\n\nremoveFavoritesButton.style.display = 'none';\naddFavoritesButton.addEventListener('click', () => {\n  removeFavoritesButton.style.display = 'block';\n  addFavoritesButton.style.display = 'none';\n  /*\n    |============================\n    | add to localStorage\n    |============================\n  */\n  const parsedFavCocktails = JSON.parse(localStorage.getItem('favCocktails'));\n  parsedFavCocktails.push(cocktail);\n  localStorage.setItem('favCocktails', JSON.stringify(parsedFavCocktails));\n  /*\n    |============================\n    | changing add button onto remove btn on mainPage\n    |============================\n  */\n  const cardMainPageEl = cocktailsDiv.querySelector(\n    `[id = \"${cocktail.idDrink}\"]`\n  );\n  const buttonsDivEl = cardMainPageEl.querySelector('.random-cocktail__btn');\n  const addButtonEl = buttonsDivEl.querySelector('.btn-add-to');\n  addButtonEl.remove();\n  buttonsDivEl.insertAdjacentHTML('beforeend', REMOVE_BTN);\n\n  Notify.success(`Cocktail ${cocktail.strDrink} added to your favorites😍!`);\n});\nremoveFavoritesButton.addEventListener('click', () => {\n  removeFavoritesButton.style.display = 'none';\n  addFavoritesButton.style.display = 'block';\n  /*\n    |============================\n    | remove from localStorage\n    |============================\n  */\n  const parsedFavCocktails = JSON.parse(localStorage.getItem('favCocktails'));\n  parsedFavCocktails.splice(\n    parsedFavCocktails.findIndex(\n      cocktail => Number(cocktail.idDrink) === Number(cocktailTitle.id)\n    ),\n    1\n  );\n  localStorage.setItem('favCocktails', JSON.stringify(parsedFavCocktails));\n  /*\n    |============================\n    | changing remove button onto add btn on mainPage\n    |============================\n  */\n  const cardMainPageEl = cocktailsDiv.querySelector(\n    `[id = \"${cocktail.idDrink}\"]`\n  );\n  const buttonsDivEl = cardMainPageEl.querySelector('.random-cocktail__btn');\n  const removeButtonEl = buttonsDivEl.querySelector('.btn-remove-from');\n  removeButtonEl.remove();\n  buttonsDivEl.insertAdjacentHTML('beforeend', ADD_BTN);\n\n  Notify.info(\n    `Cocktail ${cocktail.strDrink} was removed from your favorites🙄!`\n  );\n});\n\ncloseBtn.addEventListener('click', () => {\n  const modalCocktail = document.querySelector('.modal__cocktail');\n\n  modalCocktail.innerHTML = '';\n  toggleModal();\n  document.querySelector('body').classList.remove('no-scroll');\n});\n\nexport function toggleModal() {\n  document.querySelector('body').classList.add('no-scroll');\n  modalGroup.classList.toggle('is-hidden');\n}\n\n/**\n  |============================\n  | Function\n  |============================\n*/\n\nexport async function fetchCocktailById(id) {\n  const response = await fetch(\n    `https://thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`\n  );\n  const { drinks } = await response.json();\n  return drinks[0];\n}\n\nexport async function onBtnAddFavClick(e) {\n  const id = e.target.closest('li').getAttribute('id');\n  // console.log(id);\n\n  const data = await fetchCocktailById(id);\n  cocktail = data;\n  const html = `<div class=\"modal__cocktail\">\n  <h3 class=\"modal__title theme_text_color\" id='${data.idDrink}'>${data.strDrink}</h3>\n  <div class=\"modal__instructions-hold\">\n    <h4 class=\"modal__instructions theme_text_color\">INSTRUCTION:</h4>\n    <p class=\"instruction\">${data.strInstructions}</p>\n  </div>\n  <img\n      class=\"modal__picture\"\n      src=\"${data.strDrinkThumb}\"\n      alt=\"\"\n      width=\"280\"\n      height=\"280\"\n    />\n  <div class=\"modal__ingredients-hold\">\n    \n    <h4 class=\"modal__ingredients theme_text_color\">INGREDIENTS</h4>\n    <p class=\"modal__description theme_text_color\">Per cocktail</p>\n    <ul class=\"ingredients__list theme_modal_text_color\"></ul>\n  </div>\n</div>`;\n\n  const modalInfo = document.querySelector('.modal-cocktails-group');\n\n  modalInfo.insertAdjacentHTML('afterbegin', html);\n\n  /*\n  |============================\n  | Serhii localStorage logic \n  |============================\n*/\n  cocktailTitle = document.querySelector('.modal__title');\n  chooseAddOrRemoveButton();\n  /*\n    |============================\n    | \n    |============================\n  */\n  const ingredientsList = modalInfo.querySelector('.ingredients__list');\n\n  for (let i = 1; i <= 15; i++) {\n    const ingredient = data['strIngredient' + i];\n    if (ingredient) {\n      const listItem = document.createElement('li');\n      listItem.classList.add('ingredient__item');\n      listItem.setAttribute('data-ingredient', ingredient);\n      listItem.setAttribute('data-name', 'ingredient');\n      listItem.innerHTML = `<span class=\"ingredientsBlack\">✶ </span>${ingredient}`;\n      ingredientsList.appendChild(listItem);\n    } else {\n      break;\n    }\n    ingredientsList.addEventListener('click', onIngredientClick);\n  }\n\n  toggleModal();\n}\n\nfunction onIngredientClick(event) {\n  const liElement = event.target.closest('li');\n  if (liElement) {\n    const ingredientName = liElement.textContent.trim().substring(2);\n    getIngredientData(ingredientName);\n    modalIngredients.classList.toggle('is-hidden');\n    console.log(ingredientName);\n  }\n}\n/*\n  |============================\n  | what button will be showed\n  |============================\n*/\nfunction chooseAddOrRemoveButton() {\n  const parsedFavCocktails = JSON.parse(localStorage.getItem('favCocktails'));\n\n  if (\n    parsedFavCocktails.find(\n      cocktail => Number(cocktail.idDrink) === Number(cocktailTitle.id)\n    )\n  ) {\n    removeFavoritesButton.style.display = 'block';\n    addFavoritesButton.style.display = 'none';\n  } else {\n    removeFavoritesButton.style.display = 'none';\n    addFavoritesButton.style.display = 'block';\n  }\n}\n","/*\n  |============================\n  | Imports\n  |============================\n*/\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n/*\n  |============================\n  | Variables\n  |============================\n*/\nconst modal = document.querySelector('#modal-ingredients');\nconst openBtn = document.querySelector('.open-btn');\nconst closeBtn = document.querySelector('.modal-ingredients-close');\nexport const modalIngredients = document.querySelector('.backdrop');\nconst removeFavoritesButton = document.querySelector('#modal-btn__remove-fav');\nconst addFavoritesButton = document.querySelector('#modal-btn__add-to-fav');\nlet ingredientTitle;\nlet ingredient;\nif (!localStorage.getItem('favIngredients')) {\n  localStorage.setItem('favIngredients', JSON.stringify([]));\n}\n\nremoveFavoritesButton.style.display = 'none';\n\naddFavoritesButton.addEventListener('click', () => {\n  removeFavoritesButton.style.display = 'block';\n  addFavoritesButton.style.display = 'none';\n  /*\n    |============================\n    | Serhii adding to localStorage logic\n    |============================\n  */\n  const parsedFavIngredients = JSON.parse(\n    localStorage.getItem('favIngredients')\n  );\n  // console.log(ingredient);\n  parsedFavIngredients.push(ingredient);\n  // console.log(parsedFavIngredients);\n  localStorage.setItem('favIngredients', JSON.stringify(parsedFavIngredients));\n  Notify.success(`${ingredient.strIngredient} added to your favorites😍!`);\n});\nremoveFavoritesButton.addEventListener('click', e => {\n  removeFavoritesButton.style.display = 'none';\n  addFavoritesButton.style.display = 'block';\n  const parsedFavIngredients = JSON.parse(\n    localStorage.getItem('favIngredients')\n  );\n  // console.log(parsedFavIngredients);\n  // console.dir(e.target);\n  parsedFavIngredients.splice(\n    parsedFavIngredients.findIndex(\n      ingredient =>\n        Number(ingredient.idIngredient) === Number(ingredientTitle.id)\n    ),\n    1\n  );\n  localStorage.setItem('favIngredients', JSON.stringify(parsedFavIngredients));\n  Notify.info(`${ingredient.strIngredient} was removed from your favorites🙄!`);\n});\n\n/**\n  |============================\n  | Julia logic\n  |============================\n*/\n\nexport async function getIngredientData(ingredientName) {\n  const response = await fetch(\n    `https://www.thecocktaildb.com/api/json/v1/1/search.php?i=${ingredientName}`\n  );\n  const data = await response.json();\n  /*\n    |============================\n    | var ingredient moved to global scope\n    |============================\n  */\n  // const ingredient = data.ingredients[0];\n  ingredient = data.ingredients[0];\n  //\n\n  let type = '';\n  if (ingredient.strType) {\n    type = `<strong class=\"modal-ingredient-uptitle theme_text_color\">${ingredient.strType}</strong>`;\n  }\n  let description = '';\n  if (ingredient.strDescription) {\n    description = `<p class=\"modal-ingredient-text theme_modal_text_color\">${ingredient.strDescription}</p>`;\n  }\n  let abv = '';\n  if (ingredient.strABV) {\n    abv = `<li class=\"modal-ingredient-item specs-list__item theme_modal_text_color\"><span class=\"specs-list__marker theme_text_color\">&#10038;</span> Alcohol by volume: ${ingredient.strABV}%</li>`;\n  }\n  function updateIngredients() {\n    return `<div class=\"remove\"><h2 class=\"modal-ingredient-title theme_text_color\" id='${ingredient.idIngredient}''>${ingredient.strIngredient}</h2>\n        ${type}\n        ${description}\n        <ul class=\"modal-ingredient-list specs-list\">\n        <li class=\"modal-ingredient-item specs-list__item theme_modal_text_color\"><span class=\"specs-list__marker theme_text_color \">&#10038;</span> Alcohol: ${ingredient.strAlcohol}</li>\n        ${abv}\n          </ul></div>`;\n  }\n\n  modal.insertAdjacentHTML('afterbegin', updateIngredients());\n  ingredientTitle = document.querySelector('.modal-ingredient-title');\n  chooseAddOrRemoveButton();\n}\n// modal.insertAdjacentHTML('beforeend', updateIngredients());\n\n// Функция для получения избранных ингредиентов из localStorage\nfunction getFavorites() {\n  const favorites = localStorage.getItem('favIngredients');\n  if (favorites === null) {\n    return [];\n  }\n  return JSON.parse(favorites);\n}\n\n// Функция для сохранения избранного ингредиента в localStorage\nfunction saveToFavorites() {\n  const favorites = getFavorites();\n  const ingredient = {\n    idIngredient: data.ingredients[0].idIngredient,\n    strIngredient: data.ingredients[0].strIngredient,\n    strDescription: data.ingredients[0].strDescription,\n    strType: data.ingredients[0].strType,\n    strAlcohol: data.ingredients[0].strAlcohol,\n    strABV: data.ingredients[0].strABV,\n  };\n  favorites.push(ingredient);\n  localStorage.setItem('favIngredients', JSON.stringify(favorites));\n}\n\n// Функция для удаления ингредиента из localStorage\nfunction removeFromFavorites() {\n  const favorites = getFavorites();\n  const index = favorites.findIndex(\n    ingredient => ingredient.idIngredient === data.ingredients[0].idIngredient\n  );\n  if (index > -1) {\n    favorites.splice(index, 1);\n    localStorage.setItem('favIngredients', JSON.stringify(favorites));\n  }\n}\n\n//   // Обработчик клика на кнопку \"Add to favorites\"\n//   addFavoritesButton.addEventListener('click', () => {\n//     saveToFavorites();\n//     removeFavoritesButton.style.display = 'block';\n//     addFavoritesButton.style.display = 'none';\n//   });\n\n//   // Обработчик клика на кнопку \"Remove from favorites\"\n//   removeFavoritesButton.addEventListener('click', () => {\n//     removeFromFavorites();\n//     removeFavoritesButton.style.display = 'none';\n//     addFavoritesButton.style.display = 'block';\n//   });\n// }\n\ncloseBtn.addEventListener('click', () => {\n  const remove = document.querySelector('.remove');\n  // remove.style.display = 'none';\n  // document.querySelector('.modal-ingredients').remove.innerHTML = '';\n  // remove.querySelector.innerHTML = '';\n\n  const modalIngredients = document.querySelector('.modal-ingredients');\n  const removeElements = modalIngredients.querySelectorAll('.remove');\n\n  removeElements.forEach(element => {\n    element.remove();\n  });\n  toggleModal();\n});\nfunction toggleModal() {\n  modalIngredients.classList.toggle('is-hidden');\n}\n\n/*\n  |============================\n  | Check what button needed to be shown\n  |============================\n*/\nfunction chooseAddOrRemoveButton() {\n  const parsedFavIngredients = JSON.parse(\n    localStorage.getItem('favIngredients')\n  );\n\n  if (\n    parsedFavIngredients.find(\n      ingredient =>\n        Number(ingredient.idIngredient) === Number(ingredientTitle.id)\n    )\n  ) {\n    removeFavoritesButton.style.display = 'block';\n    addFavoritesButton.style.display = 'none';\n  } else {\n    removeFavoritesButton.style.display = 'none';\n    addFavoritesButton.style.display = 'block';\n  }\n}\n"],"names":["$8A4tc","parcelRequire","THEME","setThemeAttribute","theme","document","body","setAttribute","localStorage","setItem","setInputsValue","checked","querySelectorAll","forEach","input","currentTheme","getItem","restoreTheme","addEventHandler","target","childQuerySelector","event","callback","getAttribute","$8cee4a6e11d14af2$export$3b37be979ee3303a","target1","event1","isQuerySelector","isSingleElement","HTMLElement","elements","handler","matches","element","addEventListener","removeEventListener","$iQIUW","$961233b724316d64$var$cocktailsDiv","querySelector","$961233b724316d64$var$btnsDiv","$961233b724316d64$var$btnEl","$961233b724316d64$var$selectedCocktail","$961233b724316d64$var$cocktailName","JSON","stringify","async","e","closest","id","result","$NQ9Pj","getCocktail","favList","parse","push","drinks","length","strDrink","Notify","success","remove","insertAdjacentHTML","$8G1wF","REMOVE_BTN","console","log","error","message","failure","favCocktails","splice","findIndex","cocktail","Number","idDrink","parentNode","ADD_BTN","info","classList","contains","$eujXJ","onBtnAddFavClick","$095d091c1a949083$export$127cc8c8d036c623","cocktailName","response","fetch","ok","json","Error","$aJrzc","$a8c35a22a30d5414$var$closeBtn","$a8c35a22a30d5414$var$modalGroup","$a8c35a22a30d5414$var$removeFavoritesButton","$a8c35a22a30d5414$var$addFavoritesButton","$a8c35a22a30d5414$var$cocktail","$a8c35a22a30d5414$var$cocktailTitle","$a8c35a22a30d5414$var$cocktailsDiv","$a8c35a22a30d5414$export$313c6d35f75fc0e","add","toggle","$a8c35a22a30d5414$export$82ec8af22156561c","id2","data","id1","$a8c35a22a30d5414$export$161cc9256de3aab6","html","strInstructions","strDrinkThumb","modalInfo1","find","cocktail2","style","display","ingredientsList","i","ingredient","listItem","createElement","innerHTML","appendChild","$a8c35a22a30d5414$var$onIngredientClick","liElement","ingredientName","textContent","trim","substring","getIngredientData","modalIngredients","parsedFavCocktails","buttonsDivEl","cocktail1","$7d037d87c507d84a$var$modal","$7d037d87c507d84a$var$closeBtn","$7d037d87c507d84a$export$5fd704830285f0b1","$7d037d87c507d84a$var$removeFavoritesButton","$7d037d87c507d84a$var$addFavoritesButton","$7d037d87c507d84a$var$ingredientTitle","$7d037d87c507d84a$var$ingredient","$7d037d87c507d84a$export$ce9379edc59c4dd","ingredients","type","strType","description","strDescription","abv","strABV","idIngredient","strIngredient","strAlcohol","ingredient4","parsedFavIngredients","ingredient1"],"version":3,"file":"index.8d5c06e4.js.map"}